<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bob Maerten, le Blog]]></title>
  <link href="http://bobmaerten.github.com/atom.xml" rel="self"/>
  <link href="http://bobmaerten.github.com/"/>
  <updated>2012-09-24T16:20:10+02:00</updated>
  <id>http://bobmaerten.github.com/</id>
  <author>
    <name><![CDATA[Bob Maerten]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Au delà de l'effet « Google my own stuff »]]></title>
    <link href="http://bobmaerten.github.com/au-dela-de-leffet-google-my-own-stuff"/>
    <updated>2012-09-24T09:45:00+02:00</updated>
    <id>http://bobmaerten.github.com/au-dela-de-leffet-google-my-own-stuff</id>
    <content type="html"><![CDATA[<p>Il est de nombreux jours où Google m&#8217;est vraiment utile pour mes recherches,
très souvent même. Il y a également des jours où on ne trouve pas les bons
mots-clés, ou que le sujet est tellement spécifique que le moteur de
recherche nous n&#8217;est absolument d&#8217;aucune utilité.</p>

<p>Il y a ces jours où Google aime se moquer. Ces jours où l&#8217;on a besoin d&#8217;un
complément d&#8217;information à propos d&#8217;un sujet bien connu, mais sur lequel on
bloque. Et, il se trouve parfois que l&#8217;on a déjà publié sur le sujet, et Google
aime nous le rappeler. :-)</p>

<p>On pourrait appeler ça l&#8217;effet « Google my own stuff ».</p>

<p>Mais il y aussi ces moments où cela va un peu plus loin, de manière plus
subtile. C&#8217;est ce qui m&#8217;est arrivé il y quelques jours. Je cherchais des
informations sur l&#8217;utilisation de <a href="http://www.spotify.com">Spotify</a> via dbus.
J&#8217;avais déjà <a href="http://blog.sledge.fr/post/2011/03/30/blacklisting-sur-spotify">blogué dans une vie antérieure sur le sujet</a>
(et évidemment google s&#8217;est empressé de me le rappeler), mais je cherchais surtout
si quelqu&#8217;un, entre temps, avait eu la bonne idée de développer une librairie
ruby que je pourrais utiliser pour rapidement mettre en oeuvre une nouvelle
idée.</p>

<p>Assez naturellement, je tombe sur une <em>gem</em> appelée <a href="https://github.com/mikeycgto/spotify-dbus">spotify-dbus</a>
(un nom idéal pour le référencement naturel en fait :P) et en lisant le
<a href="https://github.com/mikeycgto/spotify-dbus#credits">README</a>, la section
<em>Credits</em> renvoie sur <a href="https://gist.github.com/892428">un de mes propres gists</a> (de mon ancien compte github
pour être exact) !</p>

<p>Au final, je n&#8217;étais pas plus avancé, car il se trouve que cette librairie ne
faisait pas plus que ce dont je parlais dans mon ancien post, mais la
sérendipité induite de cette découverte m&#8217;a bien scotché et au final empli d&#8217;une
certaine fierté d&#8217;avoir contribué, sans le savoir certes, à la construction
d&#8217;autre chose, d&#8217;avoir été acteur même sommairement plutôt que simple et
habituel consomateur.</p>

<p>Bref, il faudrait que je publie plus, et plus souvent.</p>

<p>Et vous, ça vous est déjà arrivé ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tmux+Vim Mega Combo]]></title>
    <link href="http://bobmaerten.github.com/tmux-plus-vim-mega-combo"/>
    <updated>2012-08-30T13:15:00+02:00</updated>
    <id>http://bobmaerten.github.com/tmux-plus-vim-mega-combo</id>
    <content type="html"><![CDATA[<p>Je vous propose pour ce billet de rentrée, un petit retour sur la récente refonte de mon environnement de développement sous Ubuntu.</p>

<p>Pour situer, j&#8217;utilise quasi-exclusivement <a href="http://www.vim.org">vim</a> car c&#8217;est un usage qui me convient cérébralement. Pour mémoire, vim est un éditeur de texte qui permet (entre autre) la distinction du mode insertion et du mode commande, et rien que ça, une fois mappé ça mentalement c&#8217;est une tuerie.</p>

<p>D&#8217;autre part, je me sers depuis peu et de plus en plus volontiers de <a href="http://tmux.sourceforge.net/">tmux</a>, un <em>terminal multiplexer</em> qui offre la possibilité de travailler en sessions (détachables et réattachables à souhait), et d&#8217;organiser son terminal en fenêtres et panels. C&#8217;est une alternative à l&#8217;outil GNU standard <em>screen</em> que j&#8217;utilise plus volontairement lorsque je dois exécuter des commandes longues sur mes serveurs, car il y est installé par défaut. Bien que les deux outils se valent, je préfère tout de même le <em>feeling</em> de tmux.</p>

<p>L&#8217;objectif n&#8217;est pas de faire l&#8217;apologie des outils que j&#8217;utilise, mais de présenter l&#8217;usage que j&#8217;en ai et de partager les trucs, astuces et écueils techniques.</p>

<!--more-->


<h2>Objectif</h2>

<p>Dans cette refonte entamée, je souhaitais pouvoir disposer d&#8217;un environnement « transportable » ou tout du moins réplicable facilement, voire automatiquement sur mes différents postes (boulot, maison, portable). L&#8217;idée de travailler au maximum dans un shell *nix s&#8217;est rapidement imposée. La plupart des outils se configurant à l&#8217;aide de fichier de configuration texte, l&#8217;usage d&#8217;un dépot git ou d&#8217;un outil de synchronisation de fichiers comme <a href="http://one.ubuntu.com">UbuntuOne</a> ou <a href="http://dropbox.com">DropBox</a> permettrait d&#8217;obtenir le résultat escompté.</p>

<p>J&#8217;ai donc décidé de placer l&#8217;ensemble de mes fichiers de configuration (dotfiles) dans mon Dropbox, et d&#8217;avoir un petit script pour placer des liens symboliques en lieu et place des fichiers de base. Ainsi la synchronisation s&#8217;effectue (de manière transparente ou à la demande selon la configuration de Dropbox mise en place) sur mes différents postes.</p>

<figure class='code'><figcaption><span>Création des liens symboliques à la racine du compte depuis le dossier Dropbox</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nb">cd</span> ~
</span><span class='line'>ln -s Dropbox/dotfiles/tmux/tmux.conf .tmux.conf
</span><span class='line'>ln -s Dropbox/dotfiles/zsh/zshrc .zshrc
</span><span class='line'>ln -s Dropbox/dotfiles/git/gitconfig .gitconfig
</span><span class='line'>ln -s Dropbox/dotfiles/vim .vim
</span><span class='line'>ln -s Dropbox/dotfiles/vim/vimrc .vimrc
</span><span class='line'>ln -s Dropbox/dotfiles/ruby/gemrc .gemrc
</span><span class='line'>ln -s Dropbox/dotfiles/ruby/railsrc .railsrc
</span><span class='line'>ln -s Dropbox/dotfiles/fonts/ .fonts
</span><span class='line'>/usr/bin/fc-cache -vf
</span></code></pre></td></tr></table></div></figure>


<h2>Mon usage de tmux</h2>

<p>Tmux me permet essentiellement de partager ma fenêtre de terminal en plusieurs onglet ou panels, et de gérér/surveiller/lancer plusieurs activités simultanées. Vous pouvez voir sur l&#8217;image ci-dessous une session tmux organisée en 3 panels : mon éditeur vim en haut en cours d&#8217;édition de ce billet, et deux autres en bas qui font tourner deux programmes, un serveur Webrick pour prévisualiser le billet, et un système de rechargement automatique de page web (guard-livereload).
<img src="http://bobmaerten.github.com/images/sessiontmux.png" alt="Session Tmux" />
Tmux permet également de travailler avec des onglets (appelés fenêtres dans le contexte). Des commandes clavier permettent bien entendu de passer d&#8217;une fenêtre ou d&#8217;un panel à un autre, de changer la disposition, de réorganiser, et même de scripter tout cela (exemple plus loin dans le billet). Je ne vais pas détailler tout cela ici, il faudrait plusieurs articles voire un site complet, par contre si la configuration de tmux vous intéresse, je ne saurais trop vous conseiller <a href="http://pragprog.com/book/bhtmux/tmux">l&#8217;excellent bouquin sur tmux</a> de <a href="http:/twitter.com/bphogan">Brian P. Hogan</a> disponible chez <a href="http://pragprog.com">The Pragmatic Bookshelf</a> (une excellente source sur le développement logiciel au passage) qui fait le tour de l&#8217;outil pour pas bien cher.</p>

<p>Vous pourrez bien entendu trouver pas mal de documentation sur le net, comme toujours pour ce genre d&#8217;outil bien répandu dans la communauté.</p>

<h2>Trop de mapping tue le mapping</h2>

<p>Un des gros problèmes auquel j&#8217;ai été confronté fut de résoudre le croisement des différents raccourcis et de l&#8217;utilisation de certaines touches dans vim, à la fois sous tmux et en dehors tmux. En effet, tmux et vim ne s&#8217;entendent pas toujours sur certaines combinaisons. Des raccourcis qui fonctionnaient dans vim ne s&#8217;activent plus du tout une fois ouvert sous tmux. Ajoutez à cela les raccourcis du terminal lui même et c&#8217;est devenu un vrai casse-tête quand j&#8217;ai voulu configurer des raccourcis pour retailler les panels, tout en gérant les <em>splits</em> de vim&#8230;</p>

<p><a href="http://stackoverflow.com/search?q=vim+tmux">Stackoverflow</a> a été d&#8217;une grande aide pour résoudre tout ces petits problèmes, bien sur jamais bloquants, mais quand même bien frustrants. Sachez si vous rencontrez le problème que l&#8217;option tmux &#8220;set-window-option -g xterm-keys on&#8221; est d&#8217;un grand secours ! ;)</p>

<p>Si jamais, comme moi, vous vous servez des flêches de direction dans vim, voici les quelques lignes que j&#8217;ai du ajouter dans mon .vimrc afin que je puisse m&#8217;en servir sous tmux. Alors oui, je sais, il parait que les flèches dans vim c&#8217;est le mal ! <a href="http://jeetworks.org/node/89">Mais tout dépend de ce qu&#8217;on en fait</a> :P</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="c">&quot; Fix usage of arrows in tmux</span>
</span><span class='line'><span class="c">&quot; http://superuser.com/questions/401926/how-to-get-shiftarrows-and-ctrlarrows-working-in-vim-in-tmux</span>
</span><span class='line'><span class="k">if</span> &amp;<span class="nb">term</span> <span class="p">=~</span> <span class="s1">&#39;^screen&#39;</span>
</span><span class='line'><span class="c">    &quot; tmux will send xterm-style keys when its xterm-keys option is on</span>
</span><span class='line'>    execute <span class="s2">&quot;set &lt;xUp&gt;=\e[1;*A&quot;</span>
</span><span class='line'>    execute <span class="s2">&quot;set &lt;xDown&gt;=\e[1;*B&quot;</span>
</span><span class='line'>    execute <span class="s2">&quot;set &lt;xRight&gt;=\e[1;*C&quot;</span>
</span><span class='line'>    execute <span class="s2">&quot;set &lt;xLeft&gt;=\e[1;*D&quot;</span>
</span><span class='line'><span class="k">endif</span>
</span></code></pre></td></tr></table></div></figure>


<h2><em>One command to rule them all</em></h2>

<p>Dernièrement je me suis fait un petit script tmux qui me permet de réorganiser ma fenêtre courante afin d&#8217;avoir une petite zone de shell (agrandissable dans une autre fenetre, voir plus bas),</p>

<figure class='code'><figcaption><span>Formattage de la fenetre courante pour de développement Rails</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># select the first (0) pane</span>
</span><span class='line'>selectp -t 0
</span><span class='line'>
</span><span class='line'><span class="c"># split it into two halves and open vim in the second one</span>
</span><span class='line'>splitw -h -p 66 <span class="s1">&#39;vim ; zsh&#39;</span>
</span><span class='line'><span class="c"># reselect the first pane again and split it verticaly</span>
</span><span class='line'>selectp -t 1
</span><span class='line'>splitw -v -p 80 <span class="s1">&#39;guard&#39;</span>
</span><span class='line'>splitw -v -p 20 <span class="s1">&#39;rails server&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># reselect first pane</span>
</span><span class='line'>selectp -t 1
</span></code></pre></td></tr></table></div></figure>


<p>J&#8217;ai ensuite ajouté un nouveau bind dans mon .tmux.conf</p>

<figure class='code'><figcaption><span>Extrait de .tmux.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Rails dev-panes</span>
</span><span class='line'><span class="nb">bind</span>-key R <span class="nb">source</span>-file ~/Dropbox/dotfiles/tmux/rails-dev-panes
</span></code></pre></td></tr></table></div></figure>


<p>Ainsi, à la racine d&#8217;un projet rails, il me suffit de presser <Prefix>R pour me obtenir ceci. Pratique, hein ?
<img src="http://bobmaerten.github.com/images/sessionrails.png" alt="Session Rails" /></p>

<h2><em>There and back again</em></h2>

<p>En bonus, voici deux directives de configuration tmux permettant d&#8217;agrandir un panel dans une fenêtre et inversement (avec <Prefix>+ et <Prefix>-).
Cette configuiration me permet de passer temporairement d&#8217;un panel réduit (telle une zone de logs) à une fenêtre de la taille de mon terminal.</p>

<figure class='code'><figcaption><span>Zoom et DeZomm d&#8217;un panel tmux</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>unbind +
</span><span class='line'><span class="nb">bind</span> + <span class="se">\</span>
</span><span class='line'>  new-window -d -n tmux-zoom <span class="se">\;\</span>
</span><span class='line'>  swap-pane -s tmux-zoom <span class="se">\;\</span>
</span><span class='line'>  <span class="k">select</span>-window -t tmux-zoom
</span><span class='line'>
</span><span class='line'>unbind -
</span><span class='line'><span class="nb">bind</span> - <span class="se">\</span>
</span><span class='line'>  last-window <span class="se">\;\</span>
</span><span class='line'>  swap-pane -s tmux-zoom <span class="se">\;\</span>
</span><span class='line'>  <span class="nb">kill</span>-window -t tmux-zoom
</span></code></pre></td></tr></table></div></figure>


<h2>Pour finir</h2>

<p>Voila, comme pour tous les billets ou je pars dans l&#8217;idée de faire court, simple et rapide, je me plante complètement alors je préfère arrêter là. Chacun son usage des outils avec lesquels il se sent à l&#8217;aise, vous avez désormais un aperçu de ma façon de travailler.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Virtualbox + Vagrant = le duo gagnant pour les tests]]></title>
    <link href="http://bobmaerten.github.com/virtualbox-et-vagrant-le-duo-gagnant-pour-les-tests"/>
    <updated>2012-07-16T08:48:00+02:00</updated>
    <id>http://bobmaerten.github.com/virtualbox-et-vagrant-le-duo-gagnant-pour-les-tests</id>
    <content type="html"><![CDATA[<p>Lorsqu&#8217;il s&#8217;agit de tester une application ou une configuration, vient toujours le moment ou on se demande si cela vraiment fonctionner « en vrai », dans la mesure ou bien souvent, on effectue qu&#8217;une partie des tests en question afin de ne pas casser complètement son environnement de tests et donc d&#8217;avoir à le reconstruire à chaque fois.</p>

<p>Et si on avait le luxe de pouvoir casser cet environnement de test aussi souvent qu&#8217;on le voulait, sans se soucier d&#8217;avoir à péniblement le reconstruire ? La donne serait-elle différente et nos tests plus fréquents ou plus complets ?</p>

<p>C&#8217;est que ce je vous propose de regarder avec Virtualbox+Vagrant.</p>

<!--more-->


<h2>Introduction</h2>

<p><img class="left" src="http://www.prodigyproductionsllc.com/wp-content/uploads/2011/05/virtualbox_logo.png">
<a href="http://virtualbox.org">Virtualbox</a> est une solution de virtualisation de machine. Disponible sur la plupart des plate-formes du marché, il permet d&#8217;installer et de faire tourner différents systèmes en émulant le fonctionnement des périphériques (CPU, Mémoire, Disques, USB, etc.). L&#8217;intérêt dans notre cas, est que le disque du système dit « invité » est géré physiquement par un fichier sur le système « hôte », ce qui permet de le manipuler à loisir pour copier une machine virtuellement, la sauvegarder, la distribuer, ou s&#8217;en servir de référence.</p>

<p><img class="right" src="http://vagrantup.com/static/images/hippie.png">
Toutes les manipulations que l&#8217;on peut faire via l&#8217;interface utilisateur de Virtualbox étant disponible sous forme « d&#8217;API », il devient possible de scripter un certain nombre d&#8217;actions. C&#8217;est là que <a href="http://vagrantup.com">Vagrant</a> entre en scène. C&#8217;est un logiciel développé en ruby, distribué <a href="http://rubygems.org">sous forme de gem</a> pour les systèmes *nix, et <a href="http://vagrantup.com">sous forme de package</a> sous Windows, qui permet la manipulation d&#8217;image systèmes crées pour Virtualbox : création à partir d&#8217;une référence, démarrage, configuration, provisionnement, arrêt et suppression.</p>

<p><img class="left" src="http://www.noxlogic.nl/wp-content/uploads/2012/04/Puppet_Logo.png"> <img class="right" src="http://wiki.opscode.com/download/attachments/688131/OC_Chef_Logo_small.png">
Arrêtons-nous un moment sur une des fonctions citées : <em>provisionnement</em>. C&#8217;est là la vraie raison de l&#8217;utilisation du couple Virtualbox+Vagrant. En effet, Vagrant permet de préciser un état de configuration à la machine lancée, grâce à des outils comme <a href="ihttp://wiki.opscode.com/display/chef/Home">Chef</a> ou <a href="http://puppetlabs.com">Puppet</a>, de telle sorte qu&#8217;au lieu de préparer un environnement « à la main », il convient de prendre un peu plus de temps à le préparer de manière automatisée et de pouvoir réinitialiser la machine virtuelle pour retrouver un environnement nominal. Je ne vais pas trop insister sur les techniques liées aux deux outils de provisionnement proposé par Vagrant, mais si cette partie vous intéresse j&#8217;en reparlerai plus en détails dans un prochain billet.</p>

<h2>Installation des outils</h2>

<p>L&#8217;installation de Virtualbox est triviale. Sur les systèmes Debian, elle consiste à installer le paquet virtualbox-ose et sous Windows/Apple à télécharger l&#8217;installeur pour lequel il conviendra de cliquer autant de fois que nécessaire sur le bouton &#8220;suivant&#8221;. :-)</p>

<figure class='code'><figcaption><span>installation de Virtualbox</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo aptitude install virtualbox-ose
</span></code></pre></td></tr></table></div></figure>


<p>L&#8217;installation de Vagrant l&#8217;est tout autant pour peu que vous ayez un environnement ruby fonctionnel sur votre système *nix. À défaut d&#8217;un billet de mise à jour sur mon installation ruby courante, reportez-vous à <a href="http://bobmaerten.github.com/environnement-de-developpment-rails-sous-ubuntu-11-dot-10">ce précédent billet</a>. Sous Windows, Vagrant est proposé sous forme d&#8217;installateur, si bien que l&#8217;environnement ruby est installé en même temps.</p>

<figure class='code'><figcaption><span>installation de Vagrant</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install vagrant --no-ri --no-rdoc
</span></code></pre></td></tr></table></div></figure>


<h2>Préparation/récupération d&#8217;une VM de base</h2>

<p>Le site de Vagrant propose un certain de nombre de <a href="https://github.com/mitchellh/vagrant/wiki/Available-Vagrant-Boxes">machines virtuelles pré-configurées</a> (dernières version de Ubuntu en 32 et 64 bits), mais également une liste de <a href="http://www.vagrantbox.es/">machines mises à dispositions par la communauté</a>.
Il est bien évidemment possible de créer ses propres « baseboxes » en suivant <a href="http://vagrantup.com/v1/docs/base_boxes.html">les préconisations</a> du site ou en utilisant une gem bien utile appelée <a href="http://rubygems.org/gems/veewee">veewee</a>.</p>

<p>Afin d&#8217;éviter de télécharger à chaque nouvelle utilisation, Vagrant peut stocker dans votre homedir (~/vagrant.d) les <em>basebox</em> que vous manipulerez fréquemment:</p>

<figure class='code'><figcaption><span>Téléchargement et enregistrement local d&#8217;une nouvelle basebox</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant box add precise64 http://files.vagrantup.com/precise64.box
</span></code></pre></td></tr></table></div></figure>


<h2>Mise en oeuvre</h2>

<p>Prenons l&#8217;exemple d&#8217;un test sur une application web. L&#8217;idée étant de ne pas avoir à installer de serveur web, ni toute la couche applicative et ses dépendances sur son environnement de travail habituel (pour ne pas le « pourrir ») d&#8217;une part, et éventuellement d&#8217;autre part de tester le fonctionnement de l&#8217;application dans un environnement le plus proche possible de celui dans lequel il sera ammené à fonctionner lors de sa mise en production.</p>

<p>Mettons que l&#8217;on souhaite tester <a href="http://owncloud.org">ownCloud</a>, la page <a href="http://owncloud.org/support/install/">listant les pré-requis</a> va nous servir de base pour préparer notre configuration. Créons un dossier dans lequel nous déposerons l&#8217;archive du logiciel.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /tmp/owncloud_test <span class="o">&amp;&amp;</span> <span class="nb">cd</span> /tmp/owncloud_test
</span><span class='line'>wget http://download.owncloud.org/releases/owncloud-4.0.4.tar.bz2
</span></code></pre></td></tr></table></div></figure>


<p>Pour pouvoir fonctionner, Vagrant s&#8217;attend à trouver un fichier de configuration dans lequel il va nous être possible de définir en plus les quelques directives permettant de paramétrer notre environnement cible.</p>

<figure class='code'><figcaption><span>création d&#8217;un fichier de configuration</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant init precise64
</span></code></pre></td></tr></table></div></figure>


<p>Une fois le ficher Vagrantfile de base créé, renseignons le un peu plus afin de configurer notre VM comme on le souhaite</p>

<figure class='code'><figcaption><span>Vagranfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">::</span><span class="no">Config</span><span class="o">.</span><span class="n">run</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Basebox utilisée pour construire la VM</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;precise64&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Forward du port 8080 du système hôte vers le port 80 de la VM</span>
</span><span class='line'>  <span class="c1"># afin de permettre l&#39;accès au serveur web de le VM depuis le système</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">forward_port</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">8080</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Utilisation de puppet (standalone)</span>
</span><span class='line'>  <span class="c1"># normalement installé par défaut sur les basebox)</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:puppet</span> <span class="k">do</span> <span class="o">|</span><span class="n">puppet</span><span class="o">|</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">manifests_path</span> <span class="o">=</span> <span class="s2">&quot;.&quot;</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">manifest_file</span>  <span class="o">=</span> <span class="s2">&quot;owncloud.pp&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># execution de commandes spécifiques qui ne peuvent être prises en charge par Puppet</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:shell</span><span class="p">,</span> <span class="ss">:inline</span> <span class="o">=&gt;</span> <span class="s1">&#39;sudo rm -rf /var/www/* &amp;&amp;</span>
</span><span class='line'><span class="s1">                                          cd /tmp &amp;&amp;</span>
</span><span class='line'><span class="s1">                                          tar -xjf /vagrant/owncloud-4.0.4.tar.bz2 &amp;&amp;</span>
</span><span class='line'><span class="s1">                                          sudo mv /tmp/owncloud/* /var/www/ &amp;&amp;</span>
</span><span class='line'><span class="s1">                                          chown -R www-data\: /var/www &amp;&amp;</span>
</span><span class='line'><span class="s1">                                          sudo apache2 restart&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>owncloud.pp : Le fichier de provisionnement Puppet</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vg">$owncloud_reqs</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>  <span class="s2">&quot;libapache2-mod-php5&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;php5-json&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;php5-gd&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;php5-sqlite&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;curl&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;libcurl3&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;libcurl3-dev&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;php5-curl&quot;</span><span class="p">,</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'><span class="n">package</span> <span class="p">{</span> <span class="vg">$owncloud_reqs</span><span class="p">:</span>
</span><span class='line'>  <span class="k">ensure</span> <span class="o">=&gt;</span> <span class="n">installed</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Démarrage de la VM</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant up
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Importing base box <span class="s1">&#39;precise64&#39;</span>...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Matching MAC address <span class="k">for </span>NAT networking...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Clearing any previously <span class="nb">set </span>forwarded ports...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Forwarding ports...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> -- <span class="nv">22</span> <span class="o">=</span>&gt; 2222 <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> -- <span class="nv">80</span> <span class="o">=</span>&gt; 8080 <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Creating shared folders metadata...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Clearing any previously <span class="nb">set </span>network interfaces...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Booting VM...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Waiting <span class="k">for </span>VM to boot. This can take a few minutes.
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> VM booted and ready <span class="k">for </span>use!
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Mounting shared folders...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> -- v-root: /vagrant
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> -- manifests: /tmp/vagrant-puppet/manifests
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Running provisioner: Vagrant::Provisioners::Puppet...
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Running Puppet with /tmp/vagrant-puppet/manifests/owncloud.pp...
</span><span class='line'>notice: /Stage<span class="o">[</span>main<span class="o">]</span>//Package<span class="o">[</span>php5-sqlite<span class="o">]</span>/ensure: ensure changed <span class="s1">&#39;purged&#39;</span> to <span class="s1">&#39;present&#39;</span>
</span><span class='line'>
</span><span class='line'>notice: /Stage<span class="o">[</span>main<span class="o">]</span>//Package<span class="o">[</span>php5-curl<span class="o">]</span>/ensure: ensure changed <span class="s1">&#39;purged&#39;</span> to <span class="s1">&#39;present&#39;</span>
</span><span class='line'>notice: /Stage<span class="o">[</span>main<span class="o">]</span>//Package<span class="o">[</span>php5-json<span class="o">]</span>/ensure: ensure changed <span class="s1">&#39;purged&#39;</span> to <span class="s1">&#39;present&#39;</span>
</span><span class='line'>notice: /Stage<span class="o">[</span>main<span class="o">]</span>//Package<span class="o">[</span>php5-gd<span class="o">]</span>/ensure: ensure changed <span class="s1">&#39;purged&#39;</span> to <span class="s1">&#39;present&#39;</span>
</span><span class='line'>
</span><span class='line'>notice: /Stage<span class="o">[</span>main<span class="o">]</span>//Package<span class="o">[</span>libcurl3-dev<span class="o">]</span>/ensure: ensure changed <span class="s1">&#39;purged&#39;</span> to <span class="s1">&#39;present&#39;</span>
</span><span class='line'><span class="o">[</span>default<span class="o">]</span> Running provisioner: Vagrant::Provisioners::Shell...
</span></code></pre></td></tr></table></div></figure>


<p>Une fois la main rendue (c&#8217;est potentiellement <em>très</em> long, Puppet n&#8217;étant pas véloce en plus du volume dess paquets à télécharger), il suffit de se connecter à http://localhost:8080 sur votre propre machine et constater le résultat.
<img src="http://bobmaerten.github.com/images/vagrant/localhost_owncloud.png" alt="Résultat d'installation" /></p>

<p>Et voilà, une installation « jetable » de owncloud me permettant de tester l&#8217;installation, d&#8217;avancer dans la configuration, et de revenir à zéro en réinialisant complètement la machine virtuelle.</p>

<h2>Autres commandes</h2>

<p>La commande &#8216;vagrant&#8217; permet également de stopper ou suspendre (au sens Virtualbox du terme), de redémarrer, et détruire la VM. Sous *nix, la commande &#8216;vagrant ssh&#8217; comme elle l&#8217;indique permet de se connecter via SSH sur la machine virtuelle, comme on se connecterait à un serveur distant. La connexion s&#8217;effectue sans mot de passe, grâce à une clé semi-privé dans le sens ou c&#8217;est une clé utilisée par défaut dans toutes les installations de vagrant (il est préconisé de l&#8217;utiliser à la création d&#8217;une nouvelle basebox si elle a vocation à être distribuée).</p>

<p>Windows étant dépourvu de client SSH natif, la commande renvoie une erreur en précisant qu&#8217;il est possible d&#8217;utiliser un client externe tel que <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">PuTTY</a> en convertissant la clé partagée au bon format.</p>

<p>La commande &#8216;vagrant provision&#8217; relance le processus de provisionnement.</p>

<h2>Conclusion</h2>

<p>Vagrant est un outil très intéressant pour manipuler facilement différents environnements. Que ce soit pour effectuer des tests, valider un environnement, isoler des services/applications ou tester des directives Puppet/Chef en vue d&#8217;un déploiement réel.</p>

<p>L&#8217;inconvénient est évidemment que, comme tout ce qui est virtualisé, c&#8217;est fortement consommateur de ressources et en l&#8217;occurence, pas très véloce sauf à avoir une très bonne machine. Le provisionnement à répétition peut être aussi un gouffre à temps perdu lorsque des paquets doivent être installés (ils sont re-téléchargés à chaque fois). Il peut-être intéressant dans cette situation d&#8217;avoir recours à un proxy-cache. Cela fera peut-être l&#8217;objet d&#8217;un prochain billet&#8230;</p>

<h3>Lectures complémentaires</h3>

<p>L&#8217;éventail des possibilités est bien évidemment plus large que le petit cas particulier étudié ici.</p>

<ul>
<li><p>Je ne peux que vous conseiller la lecture de <a href="http://vagrantup.com/v1/docs/index.html">la partie doc site de vagrant</a> afin d&#8217;en apprendre davantage. N&#8217;hésitez pas à partager vos éventuels usages de Vagrant, c&#8217;est toujours intéressant de connaitres différents usages.</p></li>
<li><p>Présentation de <a href="http://twitter.com/jmfontaine">@jmfontaine</a> au RMLL 2012 sur la <a href="http://www.slideshare.net/JMF/grer-ses-environnements-de-dveloppement-avec-vagrant-rmll-2012">gestion des environnements de développement avec vagrant</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bilan de 2 semaines de bépo]]></title>
    <link href="http://bobmaerten.github.com/bilan-de-2-semaines-de-bepo"/>
    <updated>2012-01-29T21:42:00+01:00</updated>
    <id>http://bobmaerten.github.com/bilan-de-2-semaines-de-bepo</id>
    <content type="html"><![CDATA[<p>Lors de la veille que j&#8217;ai effectuée avant de me mettre au bépo, je suis bien évidemment tombé sur <a href="http://ploum.net">Ploum</a>, qui a passé le pas il y a bien des années déjà, et qui fait figure (enfin, pour ma part) d&#8217;ambassadeur dans le domaine.</p>

<p>Je relisais ce matin <a href="http://linuxfr.org/users/ploum/journaux/2-semaines-en-typematrix-b%C3%A9po">un article de ses journaux (linuxfr)</a> qui expose sa progression dans l&#8217;apprentissage de la manipulation du bépo, et j&#8217;ai été vraiment épaté par les similarités assez précises dans mon ressenti au bout de ces 2 semaines de pratique <a href="https://twitter.com/#!/bobmaerten/status/161467232432553985">quasi</a>-exclusive (ce post y compris, bien entendu).</p>

<!--more-->


<p>Je me permets de copier/coller son ressenti, car aussi étonnant que cela puisse paraître, c&#8217;est <em>exactement</em> ce qui m&#8217;est arrivé pour le moment depuis 15 jours (hormis le digicode).</p>

<blockquote><p>Semaine 1 (entre 10 et 20 MPM) :<br/>C&#8217;est très difficile. On a tendance a raccourcir ses phrases et à taper lettre à lettre. La frustration est grande de ne plus avoir taper ses idées, le clavier est un handicap. Je suis même devenu un peu parano : mon digicode et mon gsm me semblaient en bépo !</p><p>Semaine 2 (entre 20 et 30 MPM) :<br/>On peut commencer à taper. Cela fait plaisir. Parfois on tape très très vite et on fait des fautes toutes les deux lettres car on commence à passer en mode automatique mais sans la maîtrise. Parfois, en cas de fatigue, les doigts vont instinctivement chercher la position Azerty et on se retrouve à taper en regardant le clavier, par simple réflexe. On recommence à répondre à ses mails et à revenir à la vie en ligne.</p><footer><strong>Ploum</strong> <cite>Journal Linuxfr</cite></footer></blockquote>


<p>Alors je sais pas comment celà évoluera, mais toujours est-il que ce me conforte dans mes impressions, et que ça tombe à pic alors que je commençais en fin de semaine à désespérer de me voir progesser aussi peu.</p>

<p>Et vous, lecteurs bépoistes, qu&#8217;en est (était) il de vos impressions et progrès dans les premières semaines ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bonne résolution 2012 v2.0]]></title>
    <link href="http://bobmaerten.github.com/bonne-resolution-2012"/>
    <updated>2012-01-06T16:34:00+01:00</updated>
    <id>http://bobmaerten.github.com/bonne-resolution-2012</id>
    <content type="html"><![CDATA[<p>Eh oui, bonne au singulier car je n&#8217;en aurai qu&#8217;une seule cette année et v2.0 car c&#8217;est une des résolutions
de l&#8217;année dernière que je n&#8217;ai pas pris la peine de mettre en œuvre : apprendre à taper au clavier avec une
disposition (layout) <em>bépo</em>.</p>

<!--more-->


<p>Cette année, ce sera différent car je viens de commander un clavier dédié à cet apprentissage sur le site de
<a href="http://typematrix.com/bepo.php">TypeMatrix</a>.
<img src="http://www.typematrix.com/images/bepo/2030usb_fr_bepo_640x268.png"></p>

<p>Fortement conseillé par mes amis
<a href="https://twitter.com/#!/le_bric_a_brac">V</a>&amp;<a href="https://twitter.com/#!/vincent31416">V</a>, cette disposition de
clavier est prévue pour être beaucoup plus ergonomique que le sempiternel azery, prévu à la base il faut le
rappeler, pour taper moins vite afin que les branches de la machine à écrire ne se coincent pas&#8230; Les doigts
bougent moins, les caractères spécifiques au français et au développement logiciel sont plus logiquement
placés.</p>

<p>Alors évidement, on peut utiliser n&#8217;importe quel clavier pour écrire en bépo. Seulement, je souhaitais un
changement flagrant afin de bien préparer mon cerveau à cette nouvelle disposition. C&#8217;est pourquoi mon choix
s&#8217;est porté sur l&#8217;achat d&#8217;un clavier TypeMatrix qui propose depuis peu le bépo en terme de <em>layout</em> (on
trouve les classiques azerty et qwerty, mais également dvorak duquel s&#8217;inspire bépo).</p>

<p>L&#8217;autre avantage de ce type de clavier, c&#8217;est que certaines touches sont organisées différemment comme les
touche <em>Entrée</em> et <em>Retour arrière</em> qui sont placée au milieu du clavier afin qu&#8217;elles soient pressées avec
l&#8217;index (doigt fort) au lieu de l&#8217;oriculaire (doigt généralement le plus faible). Les touches majuscules
restant sur les doigts faible, mais avec une taille identique de chaque coté.</p>

<p>Ce type de clavier ainsi que la disposition bépo me séduisent, et maintenant que le pas est franchi, reste plus qu&#8217;à essayer,
et persister car il parait que l&#8217;apprentissage est un peu long pour rattraper une vitesse de frappe équivalente sur un clavier classique,
mais qu&#8217;une fois le mapping mental effectué, il est possible d&#8217;atteindre des <a href="http://www.dailymotion.com/video/xaf9ee_typematrix-2030-bepo-92-mpm_tech">vitesses très intéressantes</a> (c&#8217;est assez frappant de voir sur cette vidéo la position relativement statique des mains comparée à une frappe sur un clavier azerty).</p>

<p>Bien entendu, je ferai un petit retour à chaud une fois le clavier reçu.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cybook Odyssey de Bookeen, premières impressions]]></title>
    <link href="http://bobmaerten.github.com/cybook-odyssey-de-bookeen"/>
    <updated>2011-12-01T17:55:00+01:00</updated>
    <id>http://bobmaerten.github.com/cybook-odyssey-de-bookeen</id>
    <content type="html"><![CDATA[<p>Cela faisait quelques temps que j&#8217;envisageais l&#8217;achat d&#8217;une liseuse numérique pour profiter de mes
achats compulsifs chez <a href="http://pragprog.com">Pragmatic Programmers</a>, les dizaines d&#8217;e-books gratuits glanés <a href="http://www.numilog.com/Pages/Livres/EbookGratuit.aspx">ça</a> et <a href="https://www.bookeenstore.com/fr/free">là</a>, de cette superbe <a href="http://onneditpas.bbxdesign.com/3280-quick-and-dirty">extention Chrome de conversion de pages web au format ePub</a> et accessoirement de quelques PDF de tutoriaux divers.</p>

<p><img src="http://www.bookeen.com/images/odyssey/feature_7.jpg" alt="Image du Cybook Odyssey" /></p>

<!--more-->


<p>Voila chose faite avec l&#8217;achat il y quelques jours du <a href="http://bookeen.com/fr/cybook/odyssey">Cybook Odyssey</a> de <a href="http://bookeen.com">Bookeen</a>. Pourtant j&#8217;ai longtemps été rétissant envers ces outils, car pour en avoir essayé plusieurs en leur temps, j&#8217;ai toujours été déçu de leur performances. Attention, que l&#8217;on soit bien clair, ces outils ne sont pas des foudres de guerre, loin de là. Mais attendre plus de 2 secondes, comme je l&#8217;ai constaté, après avoir appuyé sur un bouton pour pouvoir passer à la page suivante d&#8217;un livre est tout simplement insurportable.</p>

<p>Pour moi, les caractéritiques essentielles que j&#8217;attendais d&#8217;un livre électronique avant de craquer étaient :
une lecture agréable et rapide (passage d&#8217;une page à l&#8217;autre), une ouverture totale permettant de
manipuler ses fichiers facilement, et un prix abordable évidemment.</p>

<p><img src="https://lh6.googleusercontent.com/-yxpj-M1KWSc/TtimvF5p4nI/AAAAAAAABGA/tqaG58rhav4/s576/cybook_odyssey.jpg" alt="Image du mon
Odyssey" /></p>

<p>C&#8217;est le cas avec l&#8217;Odyssey ! Le passage d&#8217;une page à une autre, dans un sens comme dans l&#8217;autre est très réactif. Le toucher de l&#8217;écran (tactile donc, vous l&#8217;aurez compris) est léger et agréable. L&#8217;écran est plutôt dans les tons gris très clair, d&#8217;une résolution de 800x600 avec 16 niveau de gris, permet une lecture douce et immensément moins agressive qu&#8217;un écran rétro-éclairé. Il est complètement ouvert gràce à la connection micro-USB et vu comme un lecteur de masse sous n&#8217;importe quel système d&#8217;exploitation, et son slot microSD permet de stocker bien plus de livres que je ne pourrais jamais en lire. Il permet la lecture des livres aux formats ePub, PDF, HTML, TXT, ainsi que les fichiers DRMisé (beurk) à la Adobe. Il dechiffe également les images aux format JPEG, PNG, GIF, BMP, ICO, TIF, PSD, ainsi que les fichiers audio MP3. Enfin, il dispose d&#8217;un navigateur web qui permet de se connecter via WiFi. Et tout ça pour moins de 150€, elle est pas belle la vie ?</p>

<p>J&#8217;ai eu l&#8217;occasion de l&#8217;utiliser un peu partout ces derniers jours (dans le canapé, dans le train, au bureau)
et c&#8217;est un outil vraiment agréable. Il est léger, pas encombrant, facile a tenir en main. Ma première
impression a été celle d&#8217;avoir dans les main un PADD comme ceux qu&#8217;on peux voir dans les différentes séries
de Star Trek. ;-)</p>

<p><img src="http://www.djibnet.com/photo/2592570241-cybook-di-bookeen-e-un-padd-di-star-trek-bookeen-cybook-and-a-star-trek-padd.jpg" alt="Image d'un PADD et d'un
Cybook" /></p>

<p>Bon évidemment il a (ou aura) quelques petits trucs qui me gêne(ront), et j&#8217;en reparlerai ici ou <a href="https://plus.google.com/115563477684195197330/posts">sur G+</a>, mais globalement je suis content de mon achat et cette première impression est donc très positive. Alors oui, le Kindle d&#8217;Amazon est 50€ moins cher, mais il est toujours aussi fermé et même pas tactile. Donc je pense que dans l&#8217;ensemble c&#8217;est une excellente affaire, pour peu que l&#8217;on soit bien concient des limites et de l&#8217;usage d&#8217;un tel appareil.</p>

<h3>Lecture complémentaire</h3>

<ul>
<li><a href="http://jcgarnier.wordpress.com/2011/11/18/livre-numerique-cybook-odyssey/">Le blog de J-C Garnier</a>
dispose de beaucoup de commentaires très intéressants sur le sujet.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Un peu d'animation avec jQuery]]></title>
    <link href="http://bobmaerten.github.com/un-peu-danimation-avec-jquery"/>
    <updated>2011-11-13T22:41:00+01:00</updated>
    <id>http://bobmaerten.github.com/un-peu-danimation-avec-jquery</id>
    <content type="html"><![CDATA[<p>Dans le cadre d&#8217;un projet en cours, je souhaitais placer une image assez grande sur une page d&#8217;information, mais je trouvais que cela mettait en vrac la mise en page. Aussi, je me suis demandé ce que cela pourrait donner si cette image s&#8217;affichait de manière réduite mais agrémentée d&#8217;un défilement vertical.</p>

<!--more-->


<p>L&#8217;affichage se présente donc de la sorte : une image englobée dans un calque qui est plus petit, et donc tronquée. L&#8217;idée est de faire défiler verticalement l&#8217;image pour la dévoiler au fur et à mesure :</p>

<p><img src="https://lh5.googleusercontent.com/-Z6Vkpu1xtdw/TsA9sQUDMxI/AAAAAAAAA-Y/ysQhdLEZfWA/s986/1321221551960.png" alt="Mon super Site" /></p>

<p>Voici le code correspondant.</p>

<div><script src='https://gist.github.com/1362818.js?file=page.html'></script>
<noscript><pre><code>&lt;div class=&quot;affiche&quot;&gt;
  &lt;img id=&quot;pic&quot; src=&quot;http://placehold.it/940x560&quot; /&gt;
  &lt;div class=&quot;container&quot;&gt;
    &lt;h1&gt;Mon Super Site&lt;/h1&gt;
    &lt;p&gt;ou on y cause de tout et de rien...&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre></noscript></div>


<p>Notez l&#8217;utilisation de <code>overflow:hidden</code> afin d&#8217;empêcher que le <code>div</code> ne prenne la taille de l&#8217;image.</p>

<div><script src='https://gist.github.com/1362818.js?file=page.css'></script>
<noscript><pre><code>.affiche {
  position: relative;
  height: 260px;
  overflow:hidden;
  padding: 0;
}

.affiche img {
    margin: 0;
    padding: 0;
    position: relative;
  }
</code></pre></noscript></div>


<p>Et là, jQuery est ton ami comme dirait l&#8217;autre. L&#8217;astuce consite à jouer sur la propriété <code>top</code> de l&#8217;image et de demander à jQuery d&#8217;incrémenter grâcieusement à l&#8217;aide de la fonction <a href="http://api.jquery.com/animate/">animate</a>.</p>

<div><script src='https://gist.github.com/1362818.js?file=page.js'></script>
<noscript><pre><code>$(document).ready(function() {
    function up() {
        $(&quot;#plop&quot;).animate({&quot;top&quot;: &quot;-=200px&quot;}, 1000, &quot;linear&quot;, down);
    }
    
    function down() {    
        $(&quot;#plop&quot;).animate({&quot;top&quot;: &quot;+=200px&quot;},1000, &quot;linear&quot;, up);
    }

    up();
});</code></pre></noscript></div>


<p>L&#8217;avantage de cette fonction, c&#8217;est qu&#8217;elle accepte comme dernier paramètre le nom d&#8217;une fonction a exécuter une fois l&#8217;animation complétée. Ainsi, on peut effectuer une animation dans un sens (up), puis la chainer à une animation dans le sens inverse (down), et boucler. ;-)</p>

<p>Vous pouvez aller <a href="http://jsfiddle.net/KgWK4/45/">tester/modifier ce code</a> sur jsFiddle, qui m&#8217;a bien aidé pour tripatouiller cette idée.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Environnement de développement rails sous Ubuntu 11.10]]></title>
    <link href="http://bobmaerten.github.com/environnement-de-developpment-rails-sous-ubuntu-11-dot-10"/>
    <updated>2011-11-08T22:09:00+01:00</updated>
    <id>http://bobmaerten.github.com/environnement-de-developpment-rails-sous-ubuntu-11-dot-10</id>
    <content type="html"><![CDATA[<p>Alors que nombre de tutoriels, vidéos, [pod|screen]casts traitent de la meilleure façon de configurer son environnement <em>MacOSX</em> pour le développement ruby/rails, les articles concernant ce qu&#8217;il en est des autres systèmes sont plutôt rares (et d&#8217;autant plus en français), aussi je vous propose ici ma façon de procéder sur Ubuntu 11.10 que je viens tout juste de finir d&#8217;installer et de paramétrer sur <a href="http://www.dell.com/fr/entreprise/p/vostro-3450/pd">mon portable</a>.</p>

<!--more-->


<h2>Méthode générale</h2>

<p>Comme il s&#8217;agit d&#8217;installer une configuration de développement, le principe réside en l&#8217;installation de ruby par l&#8217;intermédiaire de <a href="http://rvm.beginrescueend.com">RVM</a>. L&#8217;avantage est de pouvoir disposer des fonctionnalités offertes par RVM telles que le choix de la version de ruby en fonction du projet, et accessoirement la possibilité de gérer des <em>gemsets</em>.</p>

<h2>Pré-requis système</h2>

<p>Les paquets suivants doivent être installés afin de pouvoir compléter l&#8217;installation.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install build-essential openssl libreadline6 libreadline6-dev <span class="se">\</span>
</span><span class='line'>zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 <span class="se">\</span>
</span><span class='line'>libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison <span class="se">\</span>
</span><span class='line'>git curl libssl0.9.8 libpq-dev
</span></code></pre></td></tr></table></div></figure>


<h2>La commande magique ;-)</h2>

<p>RVM s&#8217;installe à l&#8217;aide de cette commande</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bash &lt; &lt;<span class="o">(</span>curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer <span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cette commande récupère le script d&#8217;installation directement sur le site de RVM et l&#8217;exécute en local. Ensuite, comme l&#8217;indiquent les consignes affichées à la fin de l&#8217;exécution du script, il convient d&#8217;ajouter la commande suivante dans votre fichier <code>.bashrc</code> (ou .zshrc).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[[</span> -s <span class="s2">&quot;$HOME/.rvm/scripts/rvm&quot;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">source</span> <span class="s2">&quot;$HOME/.rvm/scripts/rvm&quot;</span> <span class="c"># Load RVM into a shell</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il convient enfin de recharger votre environnement (en fermant votre terminal, ou en effectuant un <code>source .bashrc</code> (ou source .zshrc)</p>

<h2>Installation de Ruby</h2>

<p>Maintenant nous disposons de la commande rvm, nous pouvons nous attaquer à Ruby sereinement, car RVM va nous faciliter grandement la tâche. Pour installer la dernière version en date, il suffit de taper :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm install 1.9.3
</span></code></pre></td></tr></table></div></figure>


<p>S&#8217;en suit une longue phase de récupération des sources, de paramétrage et de compilation, qui au final nous amène à terminer la configuration par :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm use 1.9.3 <span class="c"># ajouter --default pour en faire la version chargée par défaut au lancement du terminal</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Toute la puissance de ruby et de rubygems à votre portée</h2>

<p>Et voila, c&#8217;est tout. Vous pouvez désormais utiliser la commande <code>gem install</code> pour installer les librairies nécessaires à vos projets.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install bundler rails
</span><span class='line'>rails new my_new_app
</span><span class='line'><span class="nb">cd </span>my_new_app
</span><span class='line'>rails s
</span></code></pre></td></tr></table></div></figure>


<p><strong>Note</strong> : cette dernière commande va échouer sur la derniere version de rails (3.1.x) car il y a une dépendance sur un moteur d&#8217;exécution Javascript. Deux solutions :</p>

<figure class='code'><figcaption><span>ajouter therubyracer au fichier Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;gem &#39;therubyracer&#39;&quot;</span> &gt;&gt; Gemfile
</span><span class='line'>bundle
</span><span class='line'>rails s
</span></code></pre></td></tr></table></div></figure>


<p>ou alors, si jamais vous vous intéressez également un peu à Javascript coté serveur, vous pouvez installer le paquet <code>nodejs</code>.</p>

<figure class='code'><figcaption><span>Installer Node.js sur le système, rails s&#8217;en servira au lieu de therubyracer</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install nodejs
</span><span class='line'>rails s
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>Comme vous pouvez le constater sur le nombre de commandes à exécuter, l&#8217;installation et la configuration d&#8217;un environnement de développement rails sous Ubuntu n&#8217;est pas très compliqué. Et même si vous développez sous <em>MacOSX</em>, il peut être intéressant de connaître la démarche pour peu que vous soyez amené à déployer votre code sur un système Linux, ou si vous souhaitez tester votre application sur un serveur virtualisé (avec la gem <code>vagrant</code> par exemple).</p>

<h4>Ressources complémentaires</h4>

<ul>
<li><a href="https://github.com/joshfng/railsready">RailsReady</a> : un script encore plus automatisé qui fonctionne sur MacOS, Ubuntu et CentOS permettant d&#8217;effectuer toutes les manipulations effectuées ci-dessus en une ligne.</li>
<li><a href="https://github.com/sstephenson/rbenv">rbenv</a> est une nouvelle implémentation des fonctionnalités de RVM, avec un postulat légèrement différenti (notamment sur la façon de gérer l&#8217;environnement). Je l&#8217;évoque ici, mais ne l&#8217;ayant pas exploré vraiment, je ne me permettrais pas de porter un jugement.</li>
<li><a href="http://doc.ubuntu-fr.org/rubyonrails">La documentation Ubuntu officielle</a> en français, mais elle préconise une installation de RVM au niveau du système, ce qui oblige à préfixer chaque action d&#8217;installation de gem par <code>sudo</code>.</li>
</ul>


<h1>Mises à jour de cet article</h1>

<p>2011-11-12 : Ajout d&#8217;un prérequis (libpq-dev) requis par l&#8217;hébergement heroku
2011-11-09 : Ajout d&#8217;un prérequis (libssl) pour permettre à certaines application rails 3.0.x de se lancer</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C'est reparti pour de nouvelles aventures.]]></title>
    <link href="http://bobmaerten.github.com/cest-reparti-pour-de-nouvelles-aventures"/>
    <updated>2011-11-07T17:27:00+01:00</updated>
    <id>http://bobmaerten.github.com/cest-reparti-pour-de-nouvelles-aventures</id>
    <content type="html"><![CDATA[<h2>De retour en ligne</h2>

<p>Après une tentative mitigée de publication en ligne, me revoici pour un second essai à l&#8217;aide d&#8217;un nouveau système plus en phase avec les outils que j&#8217;aime manipuler au quotidien (un shell unix, un <a href="http://www.vim.org">éditeur fabuleux</a>, un <a href="http://git-scm.org">système de gestion de version</a>) ainsi qu&#8217;un outil de blog en vogue, car porté par un grand : <a href="http://octopress.org">Octopress</a> by <a href="https://github.com">GitHub</a>.</p>

<p>Les thématiques ne varient pas radicalement, ça cause toujours de DevWeb, de linux, d&#8217;opensource, mais je me suis dit, pourquoi ne pas élargir à mes coups de gueule, interrogations et humeurs, et qui sait un jour, de mes projets ! :D</p>

<p>Les prochains billets seront certainement l&#8217;occasion pour moi d&#8217;essayer les différentes fonctionnalités de la plate-forme. En tout cas, merci d&#8217;être passé faire coucou, en espérant vous revoir venir ici régulièrement.</p>
]]></content>
  </entry>
  
</feed>
